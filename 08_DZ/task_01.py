# –ó–∞–¥–∞–Ω–∏–µ
# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—Ö–æ–¥–∏—Ç –µ—ë –∏ –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ö–æ–¥–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤ —Ñ–∞–π–ª—ã json, csv –∏ pickle.
# ‚óã –î–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
# ‚óã –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ —É–∫–∞–∂–∏—Ç–µ —Ñ–∞–π–ª —ç—Ç–æ –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è.
# ‚óã –î–ª—è —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö, –∞ –¥–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ –≤ –Ω–µ–π —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.

import shutil
import json
import csv
import pickle
from sys import argv

if __name__ == '__main__':
    if len(argv) < 2:
        argv.append(".")

def dir_size(directory):
    total_size = 0
    for dirpath, dirnames, filenames in shutil.os.walk(directory):
        for filename in filenames:
            filepath = shutil.os.path.join(dirpath, filename)
            total_size += shutil.os.path.getsize(filepath)
    return total_size

def ls_dir(dirname):
    """
    Function: Creates 3 files (json, csv, pickle) containing given directory and file info.
    Arguments:
        string dirname
    Returns: string message
    """
    ls = []
    root = shutil.os.walk(dirname)
    for i in root:    
        dir = i[0]
        parent = shutil.os.path.dirname(i[0])
        size = dir_size(dir)
        ls.append({"name":dir, "parent":parent, "type":"directory", "size":size})
        files = i[2]
        for file in files:
            filepath = shutil.os.path.join(dir, file)
            size = shutil.os.path.getsize(filepath)
            ls.append({"name":file, "parent":parent, "type":"file", "size":size})
    with open('task01.json', 'w', encoding='utf-8') as f:
        json.dump(ls, f, ensure_ascii=False, indent=2)
    with open('task01.csv', 'w', encoding='utf-8', newline="") as f:        
        csv_writer = csv.DictWriter(f, [i for i in ls[0]])
        csv_writer.writeheader()  
        csv_writer.writerows(ls)
    with open('task01.pickle', "wb") as f:
        pickle.dump(ls, f)
    return "Created/updated: task01.json, task01.csv, task01.pickle"

if __name__ == '__main__':
    dirname = argv[1]
    ls_dir(dirname)