# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 1.
# üìå –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
# üìå –û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ö–æ–¥—è—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é-—É–≥–∞–¥–∞–π–∫—É —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω—ã [1, 100] –∏ [1, 10].
# üìå –ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥—è—Ç, –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤.

from typing import Callable
from random import randint as rnd

def my_fun(func_1: Callable):
    def wrapper(enigma2, num_try2):
        if not 1 <= enigma2 <= 100:
            enigma2 = rnd(1, 100)
        if not 1 <= num_try2 <= 10:
            num_try2 = rnd(1, 10)
        return func_1(enigma2, num_try2)
    return wrapper


@my_fun
def new_fun(enigma: int, num_try: int):
    for _ in range(num_try):
        my_answer = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
        if my_answer > enigma:
            print('–ú–µ–Ω—å—à–µ')
        elif my_answer < enigma:
            print('–ë–æ–ª—å—à–µ')
        else:
            print('–í–µ—Ä–Ω–æ')
            break


if __name__ == '__main__':

    # hello = my_fun(30, 7)
    # print(hello)
    new_fun(34, 5)